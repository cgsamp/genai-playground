services:
  postgres:
    image: postgres:16
    container_name: genai-postgres
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres} -d playground"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - genai-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: genai-pgadmin-dev
    ports:
      - "${PGADMIN_PORT:-8081}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin/pgpass:/pgpass:ro
    depends_on:
      - postgres
    networks:
      - genai-network

  backend:
    build:
      context: ..
      dockerfile: docker/backend/Dockerfile
    container_name: genai-backend
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    volumes:
      - ../backend:/app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/playground
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_ADMIN_PASSWORD:-postgres}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - genai-network
    command: ["mvn", "spring-boot:run"]

volumes:
  postgres-data:
    name: genai-postgres-data
  pgadmin-data:
    name: genai-pgadmin-data

networks:
  genai-network:
    name: genai-network
    driver: bridge
